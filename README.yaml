name: Terraform AWS SES Configuration Set Setup
#logo: logo/logo.jpg

license: "APACHE2"

copyrights:
  - name: "Cloud Ops Works LLC"
    url: "https://cloudops.works"
    year: "2024"

github_repo: cloudopsworks/terraform-module-aws-ses-configuration-sets

description: |-
  This Terraform module sets up AWS SES (Simple Email Service) Configuration Sets. Configuration Sets in 
  SES are used to manage groups of email sending rules. This module allows you to define various options for delivery, 
  reputation, sending, suppression, tracking, and VDM (Virtual Deliverability Manager) settings. 
  It supports dynamic configuration based on the provided input variables, making it flexible and customizable for 
  different use cases. The module also includes tagging support to help organize and manage resources within your 
  AWS environment.

# Introduction to the project
introduction: |-
  This Terraform module provides a comprehensive solution for managing AWS SES Configuration Sets. It enables you to:

  - Create and manage multiple SES Configuration Sets
  - Configure delivery options, reputation metrics, and sending settings
  - Set up event tracking and Virtual Deliverability Manager (VDM) options
  - Define event destinations for monitoring and analytics
  - Implement suppression and tracking configurations

  The module is designed to be flexible and scalable, supporting various AWS service integrations including CloudWatch, 
  EventBridge, Kinesis Firehose, SNS, and Pinpoint for event tracking and management.

# How to use this project
usage: |-
  To use this module, include it in your Terraform configuration with the required variables:

  ```hcl
  module "ses_config_sets" {
    source = "cloudopsworks/terraform-module-aws-ses-configuration-sets"

    configs = {
      primary_config = {
        name = "primary-email-config"
        delivery_options = {
          sending_pool_name = "production-pool"
          tls_policy       = "REQUIRE"
        }
        reputation_metrics_enabled = true
        sending_enabled           = true
        vdm_options = {
          engagement_metrics_enabled = true
        }
        event_destinations = {
          cloudwatch_metrics = {
            enabled = true
            matching_types = ["SEND", "REJECT", "BOUNCE", "COMPLAINT"]
            cloudwatch = {
              dimension_name         = "email-events"
              dimension_value_source = "MESSAGE_TAG"
            }
          }
        }
      }
    }
  }
  ```

  ### Configuration Options

  The module supports extensive configuration through the `configs` variable:

  - **Delivery Options**: Configure TLS policies and sending pools
  - **Reputation Metrics**: Enable/disable reputation tracking
  - **Event Destinations**: Set up various destinations for event tracking
  - **VDM Options**: Configure Virtual Deliverability Manager settings
  - **Tracking Options**: Set up custom redirect domains and HTTPS policies

  ### config Input Variable
  ```yaml
  configs:
    <configset_id>:
      name: <string> # Optional. The name of the configuration set. If not provided, the configset_id or name_prefix will be used.
      name_prefix: <string> # Optional. The prefix to use for the configuration set name. If not provided, the configset_id will be used. Overriden by the name attribute.
      delivery_options:
        max_delivery_seconds: <number> # Optional. The maximum amount of time, in seconds, that an email can remain in the system before being sent.
        sending_pool_name: <string> # Optional. The name of the dedicated IP pool that you want to associate with the configuration set.
        tls_policy: <string> # Optional. The TLS policy that is used to encrypt the email content.
      reputation_metrics_enabled: <bool> # Optional. Indicates whether or not reputation metrics are enabled for the configuration set.
      sending_enabled: <bool> # Optional. Indicates whether or not email sending is enabled for the configuration set.
      suppressed_reasons: <string> # Optional. A list of reasons that email sending is suppressed for the configuration set.
      tracking_options:
        custom_redirect_domain: <string> # Optional. The domain that you want to use for tracking open and click events.
        https_policy: <string> # Optional. The open and click tracking options for the configuration set.
      vdm_options:
        engagement_metrics_enabled: <bool> # Optional. Indicates whether or not the configuration set has engagement metrics enabled.
        optimized_shared_delivery_enabled: <bool> # Optional. Indicates whether or not the configuration set has optimized shared delivery enabled.
      event_destinations:
        <destination_id>: # The ID of the destination. will be used as destination_name
          enabled: <bool> # Indicates whether or not the event destination is enabled.
          matching_types: <list(string)> # The types of events that are sent to the event destination.
          cloudwatch: # Optional. The CloudWatch destination for the event destination.
            default_dimension_value: <string> # The default value of the dimension that is published to Amazon CloudWatch.
            dimension_name: <string> # The name of the dimension that is published to Amazon CloudWatch.
            dimension_value_source: <string> # The source of the dimension that is published to Amazon CloudWatch.
          event_bridge: # Optional. The Amazon EventBridge destination for the event destination.
            event_bus_arn: <string> # The ARN of the Amazon EventBridge bus that you want to publish events to.
          kinesis_firehose: # Optional. The Kinesis Firehose destination for the event destination.
            delivery_stream_arn: <string> # The ARN of the Kinesis Firehose delivery stream that you want to publish events to.
            iam_role_arn: <string> # The ARN of the IAM role that gives Amazon SES permission to publish events to the Kinesis Firehose delivery stream.
          sns: # Optional. The Amazon SNS destination for the event destination.
            topic_arn: <string> # The ARN of the Amazon SNS topic that you want to publish events to.
          pinpoint: # Optional. The Amazon Pinpoint destination for the event destination.
            application_arn: <string> # The Amazon Resource Name (ARN) of the Amazon Pinpoint project that you want to publish events to.
  ```

# Example usage
examples: |-
  ### Basic Terragrunt Configuration
  ```hcl
  include "root" {
    path = find_in_parent_folders()
  }

  terraform {
    source = "git::https://github.com/cloudopsworks/terraform-module-aws-ses-configuration-sets.git?ref=v1.0.0"
  }

  inputs = {
    configs = {
      marketing_emails = {
        name_prefix = "marketing"
        delivery_options = {
          tls_policy = "REQUIRE"
        }
        event_destinations = {
          analytics = {
            enabled = true
            matching_types = ["SEND", "OPEN", "CLICK"]
            kinesis_firehose = {
              delivery_stream_arn = "arn:aws:firehose:us-west-2:123456789012:deliverystream/ses-events"
              iam_role_arn = "arn:aws:iam::123456789012:role/ses-firehose-role"
            }
          }
        }
      }
    }
  }
  ```

  ### Advanced Configuration with Multiple Destinations
  ```hcl
  inputs = {
    configs = {
      transactional = {
        name = "transactional-emails"
        delivery_options = {
          sending_pool_name = "dedicated-pool"
          tls_policy = "REQUIRE"
        }
        event_destinations = {
          monitoring = {
            enabled = true
            matching_types = ["REJECT", "BOUNCE", "COMPLAINT"]
            sns = {
              topic_arn = "arn:aws:sns:us-west-2:123456789012:email-alerts"
            }
          }
          metrics = {
            enabled = true
            matching_types = ["SEND", "DELIVERY"]
            cloudwatch = {
              dimension_name = "EmailType"
              dimension_value_source = "MESSAGE_TAG"
              default_dimension_value = "transactional"
            }
          }
        }
      }
    }
  }
  ```

# How to get started quickly
quickstart: |-
  1. Add the module to your Terraform configuration:
     ```hcl
     module "ses_config" {
       source = "cloudopsworks/terraform-module-aws-ses-configuration-sets"

       configs = {
         default = {
           name = "default-config"
           sending_enabled = true
           event_destinations = {
             basic_tracking = {
               enabled = true
               matching_types = ["SEND", "BOUNCE", "COMPLAINT"]
               cloudwatch = {
                 dimension_name = "EmailEvents"
                 dimension_value_source = "MESSAGE_TAG"
                 default_dimension_value = "default"
               }
             }
           }
         }
       }
     }
     ```

  2. Initialize Terraform:
     ```bash
     terraform init
     ```

  3. Review the execution plan:
     ```bash
     terraform plan
     ```

  4. Apply the configuration:
     ```bash
     terraform apply
     ```

  5. Access the configuration set details through outputs:
     ```hcl
     output "config_sets" {
       value = module.ses_config.configuration_sets
     }
     ```

include:
  - "docs/targets.md"
  - "docs/terraform.md"

contributors:
  - name: "Cristian Beraha"
    github: "berahac"